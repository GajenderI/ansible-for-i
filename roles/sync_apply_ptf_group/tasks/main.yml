---
# role for sync_apply_ptf_group
# Call ibm.power_ibmi.ibmi_synchronize_files to tranfer the exists ptf group files to an ibm i system, then call ibm.power_ibmi.ibmi_fix_imgclg to apply this
# ptf group. And return the result.
- name: Initialize src_list and sync_apply_fail
  set_fact:
    src_list: []
    sync_apply_fail: false

- name: Compose target tmp dir str
  set_fact:
    path: "{{ dest }}/{{ ptf_group_info.file_path | basename }}"

- name: check if the folder is alrady exists
  ansible.builtin.stat:
    path: "{{ path }}"
  register: stat_result
  ignore_errors: true

- name: Include check_file role to check if files are the same
  include_role:
    name: check_file
  vars:
    target_file_path: "{{ path }}"
    repo_file_path: "{{ ptf_group_info.file_path }}"
  when: stat_result.stat.exists is true

- block:
    - name: Clear receive dir
      file:
        path: "{{ path }}"
        state: absent
      register: clear_result
      ignore_errors: true

    - name: Make receive dir
      file:
        path: "{{ path }}"
        state: directory
        mode: 0755
      register: file_result
      ignore_errors: true

    - block:
        - name: Skip when make receive dir fail
          debug:
            msg: "{{ 'Make receive dir ' + path + ' fail, skip the rest of this role.' }}"

        - name: Initialize sync_apply_fail
          set_fact:
            sync_apply_fail: true
      when: file_result.failed == 1

    - block:
        - name: Recursively find files on repo server
          find:
            paths: "{{ ptf_group_info.file_path }}"
            recurse: true
          delegate_to: "{{ repo_server }}"
          register: find_result_repo

        - name: compose src_list
          set_fact:
            src_list: "{{ src_list | default([]) + [{ 'src': find_result_repo_var.path }] }}"
          loop: "{{ find_result_repo.files }}"
          loop_control:
            loop_var: find_result_repo_var

        - name: debug src_list
          debug:
            var: src_list

        - name: Transfer image to target_system
          ibm.power_ibmi.ibmi_synchronize_files:
            dest: "{{ path }}"
            src_list: "{{ src_list }}"
          delegate_to: "{{ src_host }}"
          register: sync_result

        # - name: Print transfer
        #   debug:
        #     var: sync_result

        - block:
            - name: skip when transfer failed
              debug:
                msg: "One or more ptf group file transfer failed, quit apply ptf group action."

            - name: set sync_apply_fail
              set_fact:
                sync_apply_fail: true
          when: sync_result.fail_list != []

  when: same_files is false or stat_result.stat.exists is false

- block:
    - name: Get the home dir on target server
      shell: 'echo $HOME'
      register: home_dir

    - name: Compose path
      set_fact:
        path: "{{ path | regex_replace('~', home_dir.stdout) }}"
      when: path | regex_search("^~")

    # - name: debug path
    #   debug:
    #     var: path

    - name: Apply PTF group
      ibm.power_ibmi.ibmi_fix_imgclg:
        src: '{{ path }}'
        rollback: true
      register: apply_result

    - name: Print apply result
      debug:
        var: apply_result

  when: sync_apply_fail is false

- name: delete the dest file dir
  file:
    path: "{{ path }}"
    state: absent
  ignore_errors: true
  when: delete
