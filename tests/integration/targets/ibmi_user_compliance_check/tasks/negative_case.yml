- name: TB01 Run with invalid parameters of fields
  ibmi_user_compliance_check:
    users:
      - 'user1'
      - 'user2'
    fields:
      - {'name':'work_day', 'expect':['*enabled']}
    become_user: 'test1'
    become_user_password: 'passw0rd'
  register: user_result
  failed_when: "'Input attribute name is not available' not in user_result.msg" 

- name: TB02 Run with unexisted user
  ibmi_user_compliance_check:
    users:
      - 'user1'
      - 'unexistU'
      - 'user3'
    fields:
      - {'name':'status', 'expect':['*disabled']}
  register: user_result
  ignore_errors: True

- name: TB02 result check
  assert:
    that: 
      - user_result.rc == 0
      - "'unexistU' in user_result.user_not_existed"
      - user_result.result_set[0]['STATUS'] == '*ENABLED'
      - user_result.result_set[0]['AUTHORIZATION_NAME'] == 'USER1'
 
- name: TB03 Run with unexisted user
  ibmi_user_compliance_check:
    users:
      - 'unexistU'
    fields:
      - {'name':'status', 'expect':['*disabled']}
  register: user_result
  ignore_errors: True


- name: TB03 result check
  assert:
    that: 
      - user_result.rc == 0
      - "'unexistU' in user_result.user_not_existed"

- name: TB04 Run with repeat fields
  ibmi_user_compliance_check:
    users:
      - 'user1'
      - 'user2'
    fields:
      - {'name':'status', 'expect':['*enabled']}
      - {'name':'status', 'expect':['*disabled']}
  register: user_result
  ignore_errors: True
  
- name: TB04 result check
  assert:
    that:
      - user_result.rc == 0
      - user_result.result_set | length != 0
      - user_result.result_set[0]['STATUS']== '*ENABLED' 
      - user_result.result_set[1]['STATUS']== '*ENABLED'

- name: TB05 compliance failed with invalid value01
  ibmi_user_compliance_check:
    users:
      - 'user3'
    fields:
      - {'name':'SIGN_ON_ATTEMPTS_NOT_VALID', 'expect':['no']}
  register: user_result
  failed_when: "'Field SIGN_ON_ATTEMPTS_NOT_VALID should be numerical' not in user_result.msg"

- name: TB06 compliance failed with invalid value03
  ibmi_user_compliance_check:
    users:
      - 'user3'
    fields:
      - {'name':'NO_PASSWORD_INDICATOR', 'expect':['*no']}
  register: user_result
  ignore_errors: True

- name: TB06 result assert
  assert: 
    that:
      - user_result.stderr is not defined
      - user_result.rc == 0
      - user_result.result_set | length != 0
      - user_result.result_set[0]['NO_PASSWORD_INDICATOR']== 'NO' 
      - user_result.result_set[0]['AUTHORIZATION_NAME']== 'USER3' 

- name: TB07 compliance failed with invalid value04, input a int value 
  ibmi_user_compliance_check:
    users:
      - 'user3'
    fields:
      - {'name':'PASSWORD_LEVEL_0_1', 'expect':[5]}
  register: user_result
  failed_when: "'must be a list comprised by string' not in user_result.msg"

- name: TB08 compliance failed with invalid value05
  ibmi_user_compliance_check:
    users:
      - 'user3'
    fields:
      - {'name':'PASSWORD_EXPIRATION_INTERVAL', 'expect':['@Y']}
    joblog: true
  register: user_result
  ignore_errors: True

- name: TB08 result assert
  assert: 
    that:
      - user_result.rc != 0
      - user_result.result_set is not defined 
      - user_result.job_log is not defined
      - "'Field PASSWORD_EXPIRATION_INTERVAL should be numerical' in user_result.msg"

- name: TB9 compliance failed with invalid value06
  ibmi_user_compliance_check:
    users:
      - 'user3'
    fields:
      - {'name':'DAYS_UNTIL_PASSWORD_EXPIRES', 'expect':['0']}
  register: user_result
  ignore_errors: True

- name: TA9 result assert
  assert: 
    that:
      - user_result.result_set | length != 0
      - user_result.result_set[0]['DAYS_UNTIL_PASSWORD_EXPIRES']== '' 
      - user_result.result_set[0]['AUTHORIZATION_NAME']== 'USER3' 

- name: TB10 compliance failed with invalid value07
  ibmi_user_compliance_check:
    users:
      - 'user3'
    fields:
      - {'name':'INITIAL_PROGRAM_LIBRARY_NAME', 'expect':['str']}
    joblog: true
  register: user_result
  ignore_errors: True

- name: TB10 result assert
  assert: 
    that:
      - user_result.result_set | length != 0
      - user_result.result_set[0]['INITIAL_PROGRAM_LIBRARY_NAME']== '' 
      - user_result.result_set[0]['AUTHORIZATION_NAME']== 'USER3' 
      - user_result.job_log | length == 0

- name: TB11 compliance failed with invalid value08, input multiple value for one value parameter
  ibmi_user_compliance_check:
    users:
      - 'user3'
    fields:
      - {'name':'SET_PASSWORD_TO_EXPIRE', 'expect':['0', 'no']}
  register: user_result
  ignore_errors: True

- name: TB11 result assert
  assert: 
    that:
      - user_result.result_set | length != 0
      - user_result.result_set[0]['SET_PASSWORD_TO_EXPIRE']== 'NO' 
      - user_result.result_set[0]['AUTHORIZATION_NAME']== 'USER3' 

- name: TB12 compliance failed with invalid value09
  ibmi_user_compliance_check:
    users:
      - 'user3'
    fields:
      - {'name':'USER_CLASS_NAME', 'expect':['*secofr']}
  register: user_result
  ignore_errors: True

- name: TB12 result assert
  assert: 
    that:
      - user_result.result_set | length != 0
      - user_result.result_set[0]['USER_CLASS_NAME']== '*USER' 
      - user_result.result_set[0]['AUTHORIZATION_NAME']== 'USER3' 

- name: TB14 compliance failed with invalid value10
  ibmi_user_compliance_check:
    users:
      - 'user3'
    fields:
      - {'name':'SPECIAL_AUTHORITIES', 'expect':['5']}
  register: user_result
  failed_when: 
    - "'*ALLOBJ' not in user_result.result_set[0]['SPECIAL_AUTHORITIES']"
    - "'*SECADM' not in user_result.result_set[0]['SPECIAL_AUTHORITIES']"
    - "'*AUDIT'  not in user_result.result_set[0]['SPECIAL_AUTHORITIES']"

- name: TB14-2 compliance failed with invalid value11
  ibmi_user_compliance_check:
    users:
      - 'user3'
    fields:
      - {'name':'SPECIAL_AUTHORITIES', 'expect':['*ALLOBJ',  '*AUDIT']}
  register: user_result
  failed_when: 
    - "'*ALLOBJ' not in user_result.result_set[0]['SPECIAL_AUTHORITIES']"
    - "'*SECADM' not in user_result.result_set[0]['SPECIAL_AUTHORITIES']"
    - "'*AUDIT'  not in user_result.result_set[0]['SPECIAL_AUTHORITIES']"

- name: TB14-3 compliance failed with invalid value12
  ibmi_user_compliance_check:
    users:
      - 'user3'
    fields:
      - {'name':'SPECIAL_AUTHORITIES', 'expect':['*ALLOBJ', '*SECADM', '*AUDIT', '*IOSYSCFG']}
  register: user_result
  failed_when: 
    - "'*ALLOBJ' not in user_result.result_set[0]['SPECIAL_AUTHORITIES']"
    - "'*SECADM' not in user_result.result_set[0]['SPECIAL_AUTHORITIES']"
    - "'*AUDIT'  not in user_result.result_set[0]['SPECIAL_AUTHORITIES']"

- name: TB15 compliance failed with invalid value13
  ibmi_user_compliance_check:
    users:
      - 'user3'
    fields:
      - {'name':'OWNER', 'expect':['@USRPRF']}
  register: user_result
  ignore_errors: True

- name: TB15 result assert
  assert: 
    that:
      - user_result.result_set | length != 0
      - user_result.result_set[0]['OWNER']== '*USRPRF' 
      - user_result.result_set[0]['AUTHORIZATION_NAME']== 'USER3' 

- name: TB16 compliance failed  with empty fields
  ibmi_user_compliance_check:
    users:
      - 'user3'
  register: user_result
  failed_when: "'missing required arguments: fields' not in user_result.msg"


- name: TB17 compliance failed  with empty fields
  ibmi_user_compliance_check:
    fields:
      -{'name':'STATUS', 'expect':['*disabled']}
  register: user_result
  failed_when: "'missing required arguments: users' not in user_result.msg"

- name: TB18 compliance failed with invalid value14
  ibmi_user_compliance_check:
    users:
      - 'user2'
    fields:
      - {'name':'USER_OPTIONS', 'expect':['*CLKWD']}
  register: user_result
  failed_when: 
    - "'*CLKWD' not in user_result.result_set[0]['USER_OPTIONS']"
    - "'*STSMSG' not in user_result.result_set[0]['USER_OPTIONS']"

- name: TB19 compliance failed with invalid value15
  ibmi_user_compliance_check:
    users:
      - 'user2'
    fields:
      - {'name':'USER_ACTION_AUDIT_LEVEL', 'expect':['3', '4']}
  register: user_result
  ignore_errors: True

- name: TB19 assert result
  assert:
    that:
      - user_result.result_set[0]['USER_ACTION_AUDIT_LEVEL'] == ''
      - user_result.result_set[0]['AUTHORIZATION_NAME'] == 'USER2'
      - user_result.rc == 0

- name: TB20 compliance failed with invalid value16
  ibmi_user_compliance_check:
    users:
      - 'user2'
    fields:
      - {'name':'USER_ACTION_AUDIT_LEVEL', 'expect':['']}
  register: user_result
  ignore_errors: True

- name: TB20 assert result
  assert:
    that:
      - user_result.result_set | length == 0
      - user_result.rc == 0

- name: TB21 compliance failed with invalid fomate
  ibmi_user_compliance_check:
    users:
      - 'user2'
    fields:
      - {USER_ACTION_AUDIT_LEVEL', '6'}
  register: user_result
  failed_when: 
    - "'There is no element \\'name\\' in the dictionary \\'field\\'' not in user_result.msg "   

- name: TB22 compliance failed with invalid value16
  ibmi_user_compliance_check:
    users:
      - 'user2'
    fields:
      - {'name':'UPPLEMENTAL_GROUP_LIST', 'expect':[~]}
  register: user_result
  failed_when:
    - "'The type of element \\'expect\\' of dictionary \\'field\\' must be a list comprised by string' not in user_result.msg "   